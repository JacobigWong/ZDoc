From: WizBrother WizMime<support@wizbrother.com>
Subject: =?gb2312?B?1+69/NP2tb26w7y4uPbIy9TazspmZm1wZWfI57rOtKbA7c34wufB9w==?=
Date: Date: Tue, 17 May 2016 18:02:58 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_Next_Part_0016872771.041"

This is a multi-part message in MIME format.

------=_Next_Part_0016872771.041
Content-Type: multipart/alternative;
	boundary="----=_Next_Part_0005624257.467"


------=_Next_Part_0005624257.467
Content-Type: text/plain;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

This is a multi-part message in MIME format.

------=_Next_Part_0005624257.467
Content-Type: text/html;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">=0A=
<HTML>=0A<HEAD>=0D=0A<meta http-equiv=3D"Content-Type" content=3D=
"text/html; charset=3Dgb2312"><TITLE>=D7=EE=BD=FC=D3=F6=B5=BD=BA=C3=
=BC=B8=B8=F6=C8=CB=D4=DA=CE=CAffmpeg=C8=E7=BA=CE=B4=A6=C0=ED=CD=F8=
=C2=E7=C1=F7</TITLE>=0A=0A<META name=3DGENERATOR content=3D"MSHTM=
L 11.00.9600.17842"></HEAD>=0A<BODY>=0A<P style=3D"LIST-STYLE-TYP=
E: none; WORD-WRAP: normal; BORDER-TOP: 0px; BORDER-RIGHT: 0px; W=
HITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-T=
RANSFORM: none; WORD-BREAK: normal; COLOR: rgb(70,70,70); PADDING=
-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/21px=
 simsun; PADDING-LEFT: 0px; MARGIN: 0px 0px 5px; BORDER-LEFT: 0px=
; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROU=
ND-COLOR: rgb(188,211,229); TEXT-INDENT: 0px; -webkit-text-stroke=
-width: 0px"><SPAN style=3D"WHITE-SPACE: normal; WORD-SPACING: 0p=
x; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(62,115,160); TEX=
T-ALIGN: left; FONT: 300 18px/20px =CE=A2=C8=ED=D1=C5=BA=DA, =BA=DA=
=CC=E5; WIDOWS: 1; DISPLAY: inline !important; LETTER-SPACING: no=
rmal; BACKGROUND-COLOR: rgb(188,211,229); TEXT-INDENT: 0px; -webk=
it-text-stroke-width: 0px">ffmpeg=D4=F5=C3=B4=D1=F9=B4=A6=C0=ED=CD=
=F8=C2=E7=C1=F7</SPAN><BR><BR>=D7=EE=BD=FC=D3=F6=B5=BD=BA=C3=BC=B8=
=B8=F6=C8=CB=D4=DA=CE=CAffmpeg=C8=E7=BA=CE=B4=A6=C0=ED=CD=F8=C2=E7=
=C1=F7=A3=AC=B8=D5=BA=C3=C7=B0=B6=CE=CA=B1=BC=E4=D2=B2=D4=DA=D7=F6=
=D5=E2=B7=BD=C3=E6=A3=AC=B3=E9=BF=D5=D5=FB=C0=ED=C1=CB=CF=C2=A3=AC=
=B0=D1=D6=F7=D2=AA=B4=FA=C2=EB=B7=A2=B3=F6=C0=B4=A3=AC=CF=A3=CD=FB=
=B6=D4=B4=F3=BC=D2=D3=D0=D3=C3=A1=A3=CE=AA=BC=F2=B5=A5=B4=A6=C0=ED=
=A3=AC=CE=D2=D5=E2=C0=EF=D6=BB=BC=F2=B5=A5=BD=E9=C9=DC=A3=D5=A3=C4=
=A3=D0=BD=D3=CA=D5=A3=D4=A3=D3=C1=F7=A3=AC=C6=E4=CA=B5=D6=BB=D2=AA=
=CA=C7socket=BD=D3=CA=D5=B5=C4=B6=BC=BF=C9=D2=D4=C0=E0=CB=C6=B4=A6=
=C0=ED=A1=A3</P>=0A<P style=3D"LIST-STYLE-TYPE: none; WORD-WRAP:=20=
normal; BORDER-TOP: 0px; BORDER-RIGHT: 0px; WHITE-SPACE: normal;=20=
WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; WORD=
-BREAK: normal; COLOR: rgb(70,70,70); PADDING-BOTTOM: 0px; TEXT-A=
LIGN: left; PADDING-TOP: 0px; FONT: 14px/21px simsun; PADDING-LEF=
T: 0px; MARGIN: 0px 0px 5px; BORDER-LEFT: 0px; WIDOWS: 1; LETTER-=
SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(188,21=
1,229); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">#includ=
e "utils.h"<BR>#include &lt;pthread.h&gt;<BR>#include &lt;libavco=
dec/avcodec.h&gt;<BR>#include &lt;libavformat/avformat.h&gt;</P>=0A=
<P style=3D"LIST-STYLE-TYPE: none; WORD-WRAP: normal; BORDER-TOP:=
 0px; BORDER-RIGHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px;=20=
BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COL=
OR: rgb(70,70,70); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING=
-TOP: 0px; FONT: 14px/21px simsun; PADDING-LEFT: 0px; MARGIN: 0px=
 0px 5px; BORDER-LEFT: 0px; WIDOWS: 1; LETTER-SPACING: normal; PA=
DDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(188,211,229); TEXT-INDENT=
: 0px; -webkit-text-stroke-width: 0px">UdpQueue recvqueue;<BR>Udp=
Param udpParam;</P>=0A<P style=3D"LIST-STYLE-TYPE: none; WORD-WRA=
P: normal; BORDER-TOP: 0px; BORDER-RIGHT: 0px; WHITE-SPACE: norma=
l; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; W=
ORD-BREAK: normal; COLOR: rgb(70,70,70); PADDING-BOTTOM: 0px; TEX=
T-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/21px simsun; PADDING-=
LEFT: 0px; MARGIN: 0px 0px 5px; BORDER-LEFT: 0px; WIDOWS: 1; LETT=
ER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(188=
,211,229); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">//=D7=
=A2=B2=E1av_read_frame=B5=C4=BB=D8=B5=F7=BA=AF=CA=FD=A3=AC=D5=E2=C0=
=EF=D6=BB=CA=C7=D7=EE=BC=F2=B4=A6=C0=ED=A3=AC=CA=B5=BC=CA=D3=A6=D3=
=C3=D6=D0=D3=A6=BC=D3=C9=CF=B3=F6=B4=ED=B4=A6=C0=ED=A3=AC=B3=AC=CA=
=B1=B5=C8=B4=FD...<BR>int read_data(void *opaque, uint8_t *buf, i=
nt buf_size) {<BR>int size =3D buf_size;<BR>int ret;<BR>// printf=
("read data %d\n", buf_size);<BR>do {<BR>ret =3D get_queue(&amp;r=
ecvqueue, buf, buf_size);<BR>} while (ret);</P>=0A<P style=3D"LIS=
T-STYLE-TYPE: none; WORD-WRAP: normal; BORDER-TOP: 0px; BORDER-RI=
GHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM:=20=
0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(70,70,7=
0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT=
: 14px/21px simsun; PADDING-LEFT: 0px; MARGIN: 0px 0px 5px; BORDE=
R-LEFT: 0px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0p=
x; BACKGROUND-COLOR: rgb(188,211,229); TEXT-INDENT: 0px; -webkit-=
text-stroke-width: 0px">// printf("read data Ok %d\n", buf_size);=
<BR>return size;<BR>}</P>=0A<P style=3D"LIST-STYLE-TYPE: none; WO=
RD-WRAP: normal; BORDER-TOP: 0px; BORDER-RIGHT: 0px; WHITE-SPACE:=
 normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: n=
one; WORD-BREAK: normal; COLOR: rgb(70,70,70); PADDING-BOTTOM: 0p=
x; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/21px simsun; PA=
DDING-LEFT: 0px; MARGIN: 0px 0px 5px; BORDER-LEFT: 0px; WIDOWS: 1=
; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: r=
gb(188,211,229); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px=
">#define BUF_SIZE 4096*500</P>=0A<P style=3D"LIST-STYLE-TYPE: no=
ne; WORD-WRAP: normal; BORDER-TOP: 0px; BORDER-RIGHT: 0px; WHITE-=
SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSF=
ORM: none; WORD-BREAK: normal; COLOR: rgb(70,70,70); PADDING-BOTT=
OM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/21px sims=
un; PADDING-LEFT: 0px; MARGIN: 0px 0px 5px; BORDER-LEFT: 0px; WID=
OWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-CO=
LOR: rgb(188,211,229); TEXT-INDENT: 0px; -webkit-text-stroke-widt=
h: 0px">int main(int argc, char** argv) {</P>=0A<P style=3D"LIST-=
STYLE-TYPE: none; WORD-WRAP: normal; BORDER-TOP: 0px; BORDER-RIGH=
T: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0p=
x; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(70,70,70)=
; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT:=20=
14px/21px simsun; PADDING-LEFT: 0px; MARGIN: 0px 0px 5px; BORDER-=
LEFT: 0px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px;=
 BACKGROUND-COLOR: rgb(188,211,229); TEXT-INDENT: 0px; -webkit-te=
xt-stroke-width: 0px">init_queue(&amp;recvqueue, 1024*500);</P>=0A=
<P style=3D"LIST-STYLE-TYPE: none; WORD-WRAP: normal; BORDER-TOP:=
 0px; BORDER-RIGHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px;=20=
BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COL=
OR: rgb(70,70,70); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING=
-TOP: 0px; FONT: 14px/21px simsun; PADDING-LEFT: 0px; MARGIN: 0px=
 0px 5px; BORDER-LEFT: 0px; WIDOWS: 1; LETTER-SPACING: normal; PA=
DDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(188,211,229); TEXT-INDENT=
: 0px; -webkit-text-stroke-width: 0px">udpParam.argv =3D argv;<BR=
>udpParam.queue =3D &amp;recvqueue;<BR>uint8_t *buf =3D av_malloc=
z(sizeof(uint8_t)*BUF_SIZE);</P>=0A<P style=3D"LIST-STYLE-TYPE: n=
one; WORD-WRAP: normal; BORDER-TOP: 0px; BORDER-RIGHT: 0px; WHITE=
-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANS=
FORM: none; WORD-BREAK: normal; COLOR: rgb(70,70,70); PADDING-BOT=
TOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/21px sim=
sun; PADDING-LEFT: 0px; MARGIN: 0px 0px 5px; BORDER-LEFT: 0px; WI=
DOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-C=
OLOR: rgb(188,211,229); TEXT-INDENT: 0px; -webkit-text-stroke-wid=
th: 0px"><BR>//UDP=BD=D3=CA=D5=CF=DF=B3=CC<BR>pthread_t udp_recv_=
thread;<BR>pthread_create(&amp;udp_recv_thread, NULL, udp_ts_recv=
, &amp;udpParam);<BR>pthread_detach(udp_recv_thread);</P>=0A<P st=
yle=3D"LIST-STYLE-TYPE: none; WORD-WRAP: normal; BORDER-TOP: 0px;=
 BORDER-RIGHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDE=
R-BOTTOM: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: r=
gb(70,70,70); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP:=
 0px; FONT: 14px/21px simsun; PADDING-LEFT: 0px; MARGIN: 0px 0px=20=
5px; BORDER-LEFT: 0px; WIDOWS: 1; LETTER-SPACING: normal; PADDING=
-RIGHT: 0px; BACKGROUND-COLOR: rgb(188,211,229); TEXT-INDENT: 0px=
; -webkit-text-stroke-width: 0px">&nbsp;<WBR></P>=0A<P style=3D"L=
IST-STYLE-TYPE: none; WORD-WRAP: normal; BORDER-TOP: 0px; BORDER-=
RIGHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM=
: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(70,70=
,70); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FO=
NT: 14px/21px simsun; PADDING-LEFT: 0px; MARGIN: 0px 0px 5px; BOR=
DER-LEFT: 0px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT:=20=
0px; BACKGROUND-COLOR: rgb(188,211,229); TEXT-INDENT: 0px; -webki=
t-text-stroke-width: 0px">av_register_all();</P>=0A<P style=3D"LI=
ST-STYLE-TYPE: none; WORD-WRAP: normal; BORDER-TOP: 0px; BORDER-R=
IGHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM:=
 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(70,70,=
70); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FON=
T: 14px/21px simsun; PADDING-LEFT: 0px; MARGIN: 0px 0px 5px; BORD=
ER-LEFT: 0px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0=
px; BACKGROUND-COLOR: rgb(188,211,229); TEXT-INDENT: 0px; -webkit=
-text-stroke-width: 0px">AVCodec *pVideoCodec, *pAudioCodec;<BR>A=
VCodecContext *pVideoCodecCtx =3D NULL;<BR>AVCodecContext *pAudio=
CodecCtx =3D NULL;<BR>AVIOContext * pb =3D NULL;<BR>AVInputFormat=
 *piFmt =3D NULL;<BR>AVFormatContext *pFmt =3D NULL;</P>=0A<P sty=
le=3D"LIST-STYLE-TYPE: none; WORD-WRAP: normal; BORDER-TOP: 0px;=20=
BORDER-RIGHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER=
-BOTTOM: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rg=
b(70,70,70); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP:=20=
0px; FONT: 14px/21px simsun; PADDING-LEFT: 0px; MARGIN: 0px 0px 5=
px; BORDER-LEFT: 0px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-=
RIGHT: 0px; BACKGROUND-COLOR: rgb(188,211,229); TEXT-INDENT: 0px;=
 -webkit-text-stroke-width: 0px">//step1:=C9=EA=C7=EB=D2=BB=B8=F6=
AVIOContext<BR>pb =3D avio_alloc_context(buf, BUF_SIZE, 0, NULL,=20=
read_data, NULL, NULL);<BR>if (!pb) {<BR>fprintf(stderr, "avio al=
loc failed!\n");<BR>return -1;<BR>}<BR>//step2:=CC=BD=B2=E2=C1=F7=
=B8=F1=CA=BD<BR>if (av_probe_input_buffer(pb, &amp;piFmt, "", NUL=
L, 0, 0) &lt; 0) {<BR>fprintf(stderr, "probe failed!\n");<BR>retu=
rn -1;<BR>} else {<BR>fprintf(stdout, "probe success!\n");<BR>fpr=
intf(stdout, "format: %s[%s]\n", piFmt-&gt;name, piFmt-&gt;long_n=
ame);<BR>}</P>=0A<P style=3D"LIST-STYLE-TYPE: none; WORD-WRAP: no=
rmal; BORDER-TOP: 0px; BORDER-RIGHT: 0px; WHITE-SPACE: normal; WO=
RD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; WORD-B=
REAK: normal; COLOR: rgb(70,70,70); PADDING-BOTTOM: 0px; TEXT-ALI=
GN: left; PADDING-TOP: 0px; FONT: 14px/21px simsun; PADDING-LEFT:=
 0px; MARGIN: 0px 0px 5px; BORDER-LEFT: 0px; WIDOWS: 1; LETTER-SP=
ACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(188,211,=
229); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">pFmt =3D=20=
avformat_alloc_context();<BR>pFmt-&gt;pb =3D pb; //step3:=D5=E2=D2=
=BB=B2=BD=BA=DC=B9=D8=BC=FC<BR>//step4:=B4=F2=BF=AA=C1=F7<BR>if (=
avformat_open_input(&amp;pFmt, "", piFmt, NULL) &lt; 0) {<BR>fpri=
ntf(stderr, "avformat open failed.\n");<BR>return -1;<BR>} else {=
<BR>fprintf(stdout, "open stream success!\n");<BR>}<BR>//=D2=D4=CF=
=C2=BE=CD=BA=CD=CE=C4=BC=FE=B4=A6=C0=ED=D2=BB=D6=C2=C1=CB<BR>if (=
av_find_stream_info(pFmt) &lt; 0) {<BR>fprintf(stderr, "could not=
 fine stream.\n");<BR>return -1;<BR>}</P>=0A<P style=3D"LIST-STYL=
E-TYPE: none; WORD-WRAP: normal; BORDER-TOP: 0px; BORDER-RIGHT: 0=
px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; T=
EXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(70,70,70); PA=
DDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px=
/21px simsun; PADDING-LEFT: 0px; MARGIN: 0px 0px 5px; BORDER-LEFT=
: 0px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BAC=
KGROUND-COLOR: rgb(188,211,229); TEXT-INDENT: 0px; -webkit-text-s=
troke-width: 0px">av_dump_format(pFmt, 0, "", 0);</P>=0A<P style=3D=
"LIST-STYLE-TYPE: none; WORD-WRAP: normal; BORDER-TOP: 0px; BORDE=
R-RIGHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTT=
OM: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(70,=
70,70); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px;=20=
FONT: 14px/21px simsun; PADDING-LEFT: 0px; MARGIN: 0px 0px 5px; B=
ORDER-LEFT: 0px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT=
: 0px; BACKGROUND-COLOR: rgb(188,211,229); TEXT-INDENT: 0px; -web=
kit-text-stroke-width: 0px">int videoindex =3D -1;<BR>int audioin=
dex =3D -1;<BR>for (int i =3D 0; i &lt; pFmt-&gt;nb_streams; i++)=
 {<BR>if ( (pFmt-&gt;streams[i]-&gt;codec-&gt;codec_type =3D=3D A=
VMEDIA_TYPE_VIDEO) &amp;&amp;<BR>(videoindex &lt; 0) ) {<BR>video=
index =3D i;<BR>}<BR>if ( (pFmt-&gt;streams[i]-&gt;codec-&gt;code=
c_type =3D=3D AVMEDIA_TYPE_AUDIO) &amp;&amp;<BR>(audioindex &lt;=20=
0) ) {<BR>audioindex =3D i;<BR>}<BR>}</P>=0A<P style=3D"LIST-STYL=
E-TYPE: none; WORD-WRAP: normal; BORDER-TOP: 0px; BORDER-RIGHT: 0=
px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; T=
EXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(70,70,70); PA=
DDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px=
/21px simsun; PADDING-LEFT: 0px; MARGIN: 0px 0px 5px; BORDER-LEFT=
: 0px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BAC=
KGROUND-COLOR: rgb(188,211,229); TEXT-INDENT: 0px; -webkit-text-s=
troke-width: 0px">if (videoindex &lt; 0 || audioindex &lt; 0) {<B=
R>fprintf(stderr, "videoindex=3D%d, audioindex=3D%d\n", videoinde=
x, audioindex);<BR>return -1;<BR>}</P>=0A<P style=3D"LIST-STYLE-T=
YPE: none; WORD-WRAP: normal; BORDER-TOP: 0px; BORDER-RIGHT: 0px;=
 WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT=
-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(70,70,70); PADDI=
NG-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/21=
px simsun; PADDING-LEFT: 0px; MARGIN: 0px 0px 5px; BORDER-LEFT: 0=
px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGR=
OUND-COLOR: rgb(188,211,229); TEXT-INDENT: 0px; -webkit-text-stro=
ke-width: 0px">AVStream *pVst,*pAst;<BR>pVst =3D pFmt-&gt;streams=
[videoindex];<BR>pAst =3D pFmt-&gt;streams[audioindex];</P>=0A<P=20=
style=3D"LIST-STYLE-TYPE: none; WORD-WRAP: normal; BORDER-TOP: 0p=
x; BORDER-RIGHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; BOR=
DER-BOTTOM: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR:=
 rgb(70,70,70); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TO=
P: 0px; FONT: 14px/21px simsun; PADDING-LEFT: 0px; MARGIN: 0px 0p=
x 5px; BORDER-LEFT: 0px; WIDOWS: 1; LETTER-SPACING: normal; PADDI=
NG-RIGHT: 0px; BACKGROUND-COLOR: rgb(188,211,229); TEXT-INDENT: 0=
px; -webkit-text-stroke-width: 0px">pVideoCodecCtx =3D pVst-&gt;c=
odec;<BR>pAudioCodecCtx =3D pAst-&gt;codec;</P>=0A<P style=3D"LIS=
T-STYLE-TYPE: none; WORD-WRAP: normal; BORDER-TOP: 0px; BORDER-RI=
GHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM:=20=
0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(70,70,7=
0); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT=
: 14px/21px simsun; PADDING-LEFT: 0px; MARGIN: 0px 0px 5px; BORDE=
R-LEFT: 0px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0p=
x; BACKGROUND-COLOR: rgb(188,211,229); TEXT-INDENT: 0px; -webkit-=
text-stroke-width: 0px">pVideoCodec =3D avcodec_find_decoder(pVid=
eoCodecCtx-&gt;codec_id);<BR>if (!pVideoCodec) {<BR>fprintf(stder=
r, "could not find video decoder!\n");<BR>return -1;<BR>}<BR>if (=
avcodec_open(pVideoCodecCtx, pVideoCodec) &lt; 0) {<BR>fprintf(st=
derr, "could not open video codec!\n");<BR>return -1;<BR>}</P>=0A=
<P style=3D"LIST-STYLE-TYPE: none; WORD-WRAP: normal; BORDER-TOP:=
 0px; BORDER-RIGHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px;=20=
BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COL=
OR: rgb(70,70,70); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING=
-TOP: 0px; FONT: 14px/21px simsun; PADDING-LEFT: 0px; MARGIN: 0px=
 0px 5px; BORDER-LEFT: 0px; WIDOWS: 1; LETTER-SPACING: normal; PA=
DDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(188,211,229); TEXT-INDENT=
: 0px; -webkit-text-stroke-width: 0px">pAudioCodec =3D avcodec_fi=
nd_decoder(pAudioCodecCtx-&gt;codec_id);<BR>if (!pAudioCodec) {<B=
R>fprintf(stderr, "could not find audio decoder!\n");<BR>return -=
1;<BR>}<BR>if (avcodec_open(pAudioCodecCtx, pAudioCodec) &lt; 0)=20=
{<BR>fprintf(stderr, "could not open audio codec!\n");<BR>return=20=
-1;<BR>}</P>=0A<P style=3D"LIST-STYLE-TYPE: none; WORD-WRAP: norm=
al; BORDER-TOP: 0px; BORDER-RIGHT: 0px; WHITE-SPACE: normal; WORD=
-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; WORD-BRE=
AK: normal; COLOR: rgb(70,70,70); PADDING-BOTTOM: 0px; TEXT-ALIGN=
: left; PADDING-TOP: 0px; FONT: 14px/21px simsun; PADDING-LEFT: 0=
px; MARGIN: 0px 0px 5px; BORDER-LEFT: 0px; WIDOWS: 1; LETTER-SPAC=
ING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(188,211,22=
9); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">int got_pic=
ture;<BR>uint8_t samples[AVCODEC_MAX_AUDIO_FRAME_SIZE*3/2];<BR>AV=
Frame *pframe =3D avcodec_alloc_frame();<BR>AVPacket pkt;<BR>av_i=
nit_packet(&amp;pkt);</P>=0A<P style=3D"LIST-STYLE-TYPE: none; WO=
RD-WRAP: normal; BORDER-TOP: 0px; BORDER-RIGHT: 0px; WHITE-SPACE:=
 normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: n=
one; WORD-BREAK: normal; COLOR: rgb(70,70,70); PADDING-BOTTOM: 0p=
x; TEXT-ALIGN: left; PADDING-TOP: 0px; FONT: 14px/21px simsun; PA=
DDING-LEFT: 0px; MARGIN: 0px 0px 5px; BORDER-LEFT: 0px; WIDOWS: 1=
; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: r=
gb(188,211,229); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px=
">while(1) {<BR>if (av_read_frame(pFmt, &amp;pkt) &gt;=3D 0) {</P=
>=0A<P style=3D"LIST-STYLE-TYPE: none; WORD-WRAP: normal; BORDER-=
TOP: 0px; BORDER-RIGHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0=
px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal;=
 COLOR: rgb(70,70,70); PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PAD=
DING-TOP: 0px; FONT: 14px/21px simsun; PADDING-LEFT: 0px; MARGIN:=
 0px 0px 5px; BORDER-LEFT: 0px; WIDOWS: 1; LETTER-SPACING: normal=
; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(188,211,229); TEXT-IN=
DENT: 0px; -webkit-text-stroke-width: 0px">if (pkt.stream_index =3D=
=3D videoindex) {<BR>fprintf(stdout, "pkt.size=3D%d,pkt.pts=3D%ll=
d, pkt.data=3D0x%x.", pkt.size, pkt.pts,(unsigned int)pkt.data);<=
BR>avcodec_decode_video2(pVideoCodecCtx, pframe, &amp;got_picture=
, &amp;pkt);<BR>if (got_picture) {<BR>fprintf(stdout, "decode one=
 video frame!\n");<BR>}<BR>}else if (pkt.s</P>&nbsp;</BODY>=0A</H=
TML>=0A

------=_Next_Part_0005624257.467--

------=_Next_Part_0016872771.041--

