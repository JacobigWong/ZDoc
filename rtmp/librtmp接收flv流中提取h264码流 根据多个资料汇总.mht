From: WizBrother WizMime<support@wizbrother.com>
Subject: =?gb2312?B?zrTD/MP7?=
Date: Date: Wed, 18 May 2016 15:26:16 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_Next_Part_0022386315.041"

This is a multi-part message in MIME format.

------=_Next_Part_0022386315.041
Content-Type: multipart/alternative;
	boundary="----=_Next_Part_0007462105.467"


------=_Next_Part_0007462105.467
Content-Type: text/plain;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

This is a multi-part message in MIME format.

------=_Next_Part_0007462105.467
Content-Type: text/html;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">=0A=
<HTML>=0A<HEAD>=0D=0A<meta http-equiv=3D"Content-Type" content=3D=
"text/html; charset=3Dgb2312"><TITLE>=CE=B4=C3=FC=C3=FB</TITLE>=0A=
=0A<META name=3DGENERATOR content=3D"MSHTML 11.00.9600.18315"></H=
EAD>=0A<BODY>=0A<H1 style=3D"WHITE-SPACE: normal; WORD-SPACING: 0=
px; TEXT-TRANSFORM: none; COLOR: black; TEXT-ALIGN: center; FONT:=
 2em/19px SimSun, =CB=CE=CC=E5, 'Arial Narrow'; WIDOWS: 1; DISPLA=
Y: block; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,2=
55); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">librtmp=BD=
=D3=CA=D5flv=C1=F7=D6=D0=CC=E1=C8=A1h264=C2=EB=C1=F7:=B8=F9=BE=DD=
=B6=E0=B8=F6=D7=CA=C1=CF=BB=E3=D7=DC</H1>=0A<DIV style=3D"WHITE-S=
PACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb=
(102,102,102); TEXT-ALIGN: center; FONT: 13px/19px SimSun, =CB=CE=
=CC=E5, 'Arial Narrow'; WIDOWS: 1; LETTER-SPACING: normal; BACKGR=
OUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stro=
ke-width: 0px"></DIV>=0A<DIV style=3D"WHITE-SPACE: normal; WORD-S=
PACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(102,102,102); PADDI=
NG-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 13px/19px SimSun, =CB=CE=
=CC=E5, 'Arial Narrow'; PADDING-LEFT: 0px; WIDOWS: 1; LETTER-SPAC=
ING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,25=
5); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">=0A<DIV sty=
le=3D"PADDING-BOTTOM: 9px; PADDING-TOP: 0px; PADDING-LEFT: 5px; P=
ADDING-RIGHT: 5px"><B>=B1=EA=C7=A9</B>:<SPAN class=3DApple-conver=
ted-space>&nbsp;</SPAN><A title=3D"rtmp android" style=3D"TEXT-DE=
CORATION: none; FONT-WEIGHT: normal; COLOR: rgb(74,107,130)" href=
=3D"http://www.programgo.com/tag/android/122961764/;jsessionid=3D=
B34EBD63A587C6B3A88660E5376EF152">rtmp android</A>&nbsp;&nbsp;<SP=
AN class=3DApple-converted-space>&nbsp;</SPAN><A title=3D"android=
 rtmpdump" style=3D"TEXT-DECORATION: none; FONT-WEIGHT: normal; C=
OLOR: rgb(74,107,130)" href=3D"http://www.programgo.com/tag/andro=
id/791062651/;jsessionid=3DB34EBD63A587C6B3A88660E5376EF152">andr=
oid rtmpdump</A>&nbsp;&nbsp;<SPAN class=3DApple-converted-space>&=
nbsp;</SPAN><A title=3D"android rtmp=D0=AD=D2=E9" style=3D"TEXT-D=
ECORATION: none; FONT-WEIGHT: normal; COLOR: rgb(74,107,130)" hre=
f=3D"http://www.programgo.com/tag/android/697723019/;jsessionid=3D=
B34EBD63A587C6B3A88660E5376EF152">android rtmp=D0=AD=D2=E9</A>&nb=
sp;&nbsp;</DIV>=0A<DIV style=3D"PADDING-BOTTOM: 0px; PADDING-TOP:=
 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px"><B>=D7=AA=D7=D4</B>:=
<SPAN class=3DApple-converted-space>&nbsp;</SPAN><A title=3Dhttp:=
//blog.chinaunix.net/uid-15063109-id-4273162.html style=3D"TEXT-D=
ECORATION: none; FONT-WEIGHT: normal; COLOR: rgb(74,107,130)" hre=
f=3D"http://blog.chinaunix.net/uid-15063109-id-4273162.html" rel=3D=
nofollow,noindex target=3D_blank>http://blog.chinaunix.net/uid-15=
063109-id-4273162.html</A></DIV></DIV>=0A<DIV style=3D"WORD-WRAP:=
 break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFO=
RM: none; WORD-BREAK: normal; COLOR: rgb(102,102,102); FONT: 13px=
/19px SimSun, =CB=CE=CC=E5, 'Arial Narrow'; WIDOWS: 1; LETTER-SPA=
CING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0p=
x; -webkit-text-stroke-width: 0px">rtmpdump=BF=C9=D2=D4=CF=C2=D4=D8=
rtmp=C1=F7=B2=A2=B1=A3=B4=E6=B3=C9flv=CE=C4=BC=FE=A1=A3<SPAN clas=
s=3DApple-converted-space>&nbsp;</SPAN><BR>=C8=E7=B9=FB=D2=AA=B6=D4=
=C1=F7=D6=D0=B5=C4=D2=F4=C6=B5=BB=F2=CA=D3=C6=B5=B5=A5=B6=C0=B4=A6=
=C0=ED=A3=AC=D0=E8=D2=AA=B8=F9=BE=DDflv=D0=AD=D2=E9=B7=D6=B1=F0=CC=
=E1=C8=A1=A1=A3<SPAN class=3DApple-converted-space>&nbsp;</SPAN><=
BR>=BC=F2=B5=A5=D0=DE=B8=C4rtmpdump=B4=FA=C2=EB=A3=AC=D4=F6=BC=D3=
=CF=E0=D3=A6=B9=A6=C4=DC=A1=A3<SPAN class=3DApple-converted-space=
>&nbsp;</SPAN><BR>1 =CC=E1=C8=A1=D2=F4=C6=B5:<SPAN class=3DApple-=
converted-space>&nbsp;</SPAN><BR>rtmpdump=B3=CC=D0=F2=D4=DADownlo=
ad=BA=AF=CA=FD=D6=D0=D1=AD=BB=B7=CF=C2=D4=D8:<SPAN class=3DApple-=
converted-space>&nbsp;</SPAN><BR>....<SPAN class=3DApple-converte=
d-space>&nbsp;</SPAN><BR>&nbsp;do<SPAN class=3DApple-converted-sp=
ace>&nbsp;</SPAN><BR>&nbsp;{<SPAN class=3DApple-converted-space>&=
nbsp;</SPAN><BR>....<SPAN class=3DApple-converted-space>&nbsp;</S=
PAN><BR>nRead =3D RTMP_Read(rtmp, buffer, bufferSize);<SPAN class=
=3DApple-converted-space>&nbsp;</SPAN><BR>....<SPAN class=3DApple=
-converted-space>&nbsp;</SPAN><BR>}while(!RTMP_ctrlC &amp;&amp; n=
Read &gt; -1 &amp;&amp; RTMP_IsConnected(rtmp) &amp;&amp; !RTMP_I=
sTimedout(rtmp));<SPAN class=3DApple-converted-space>&nbsp;</SPAN=
><BR>....<SPAN class=3DApple-converted-space>&nbsp;</SPAN><BR><BR=
>=D4=AD=B3=CC=D0=F2=CA=C7=CA=D5=B5=BD=BA=F3=D0=B4=CE=C4=BC=FE=A3=AC=
=C9=FA=B3=C9flv=A1=A3<SPAN class=3DApple-converted-space>&nbsp;</=
SPAN><BR>=CF=D6=D4=DA=A3=AC=D4=DA=D0=B4=D6=AE=C7=B0=B7=D6=B1=F0=CC=
=E1=C8=A1=D2=F4=CA=D3=C6=B5=A3=AC=CC=E1=C8=A1=D2=F4=C6=B5=B1=C8=BD=
=CF=BC=F2=B5=A5=A3=AC=D6=B1=BD=D3=B7=D6=CE=F6buffer(=B2=CE=BF=BCR=
TMP_Write=BA=AF=CA=FD=C0=EF=B5=C4=B7=BD=B7=A8).<SPAN class=3DAppl=
e-converted-space>&nbsp;</SPAN><BR>=D7=A2=D2=E2=B5=C4=CA=C7=A3=AC=
rtmpdump=C0=EF=D3=C3=B5=C4=CA=C7<SPAN class=3DApple-converted-spa=
ce>&nbsp;</SPAN><SPAN style=3D"WHITE-SPACE: normal">RTMP_Read=C0=B4=
=BD=D3=CA=D5=A3=AC=D7=A2=D2=E2=CB=FC=B5=C4=B2=CE=CA=FD=A1=A3=CE=AA=
=C1=CB=B7=BD=B1=E3=A3=AC=D2=B2=BF=C9=D2=D4=D6=B1=BD=D3=D3=C3RTMP_=
ReadPacket=A1=A3=BA=F3=C3=E6=B5=C4=CA=D3=C6=B5=CA=B9=D3=C3RTMP_Re=
adPacket=C0=B4=BD=D3=CA=D5=B2=A2=B4=A6=C0=ED=A1=A3</SPAN><SPAN cl=
ass=3DApple-converted-space>&nbsp;</SPAN><BR><BR>int RTMP_Write2(=
RTMP *r, const char *buf, int size)<SPAN class=3DApple-converted-=
space>&nbsp;</SPAN><BR>{<SPAN class=3DApple-converted-space>&nbsp=
;</SPAN><BR>&nbsp; RTMPPacket *pkt =3D &amp;r-&gt;m_write;<SPAN c=
lass=3DApple-converted-space>&nbsp;</SPAN><BR>&nbsp; char *pend,=20=
*enc;<SPAN class=3DApple-converted-space>&nbsp;</SPAN><BR>&nbsp;=20=
int s2 =3D size, ret, num;<SPAN class=3DApple-converted-space>&nb=
sp;</SPAN><BR><BR><BR><SPAN style=3D"BACKGROUND-COLOR: rgb(51,127=
,229)">&nbsp;if (size &lt; 11)<SPAN class=3DApple-converted-space=
>&nbsp;</SPAN></SPAN>{<SPAN class=3DApple-converted-space>&nbsp;<=
/SPAN><BR>&nbsp; &nbsp;/* FLV pkt too small */<SPAN class=3DApple=
-converted-space>&nbsp;</SPAN><BR>&nbsp; &nbsp;return 0;<SPAN cla=
ss=3DApple-converted-space>&nbsp;</SPAN><BR>&nbsp;}<SPAN class=3D=
Apple-converted-space>&nbsp;</SPAN><BR><BR><BR><SPAN style=3D"BAC=
KGROUND-COLOR: rgb(51,127,229)">&nbsp;</SPAN><SPAN class=3DApple-=
converted-space>&nbsp;</SPAN><SPAN style=3D"BACKGROUND-COLOR: rgb=
(51,127,229)">if (buf[0] =3D=3D 'F' &amp;&amp; buf[1] =3D=3D 'L'=20=
&amp;&amp; buf[2] =3D=3D 'V')</SPAN><SPAN class=3DApple-converted=
-space>&nbsp;</SPAN><BR><SPAN style=3D"BACKGROUND-COLOR: rgb(51,1=
27,229)">&nbsp; &nbsp;{</SPAN><SPAN class=3DApple-converted-space=
>&nbsp;</SPAN><BR><SPAN style=3D"BACKGROUND-COLOR: rgb(51,127,229=
)">&nbsp; &nbsp; &nbsp;buf +=3D 13;</SPAN><SPAN class=3DApple-con=
verted-space>&nbsp;</SPAN><BR><SPAN style=3D"BACKGROUND-COLOR: rg=
b(51,127,229)">&nbsp; &nbsp; &nbsp;s2 -=3D 13;</SPAN><SPAN class=3D=
Apple-converted-space>&nbsp;</SPAN><BR><SPAN style=3D"BACKGROUND-=
COLOR: rgb(51,127,229)">&nbsp; &nbsp;}</SPAN><SPAN class=3DApple-=
converted-space>&nbsp;</SPAN><BR><BR><BR><SPAN style=3D"BACKGROUN=
D-COLOR: rgb(51,127,229)">&nbsp;</SPAN><SPAN class=3DApple-conver=
ted-space>&nbsp;</SPAN><SPAN style=3D"BACKGROUND-COLOR: rgb(51,12=
7,229)">pkt-&gt;m_packetType =3D *buf++;</SPAN><SPAN class=3DAppl=
e-converted-space>&nbsp;</SPAN><BR><SPAN style=3D"BACKGROUND-COLO=
R: rgb(51,127,229)">&nbsp;pkt-&gt;m_nBodySize =3D AMF_DecodeInt24=
(buf);</SPAN><SPAN class=3DApple-converted-space>&nbsp;</SPAN><BR=
><SPAN style=3D"BACKGROUND-COLOR: rgb(51,127,229)">&nbsp;buf +=3D=
 3;</SPAN><SPAN class=3DApple-converted-space>&nbsp;</SPAN><BR><S=
PAN style=3D"BACKGROUND-COLOR: rgb(51,127,229)">&nbsp;pkt-&gt;m_n=
TimeStamp =3D AMF_DecodeInt24(buf);</SPAN><SPAN class=3DApple-con=
verted-space>&nbsp;</SPAN><BR><SPAN style=3D"BACKGROUND-COLOR: rg=
b(51,127,229)">&nbsp;buf +=3D 3;</SPAN><SPAN class=3DApple-conver=
ted-space>&nbsp;</SPAN><BR><SPAN style=3D"BACKGROUND-COLOR: rgb(5=
1,127,229)">&nbsp;pkt-&gt;m_nTimeStamp |=3D *buf++ &lt;&lt; 24;</=
SPAN><SPAN class=3DApple-converted-space>&nbsp;</SPAN><BR><SPAN s=
tyle=3D"BACKGROUND-COLOR: rgb(51,127,229)">&nbsp;buf +=3D 3;</SPA=
N><SPAN class=3DApple-converted-space>&nbsp;</SPAN><BR><SPAN styl=
e=3D"BACKGROUND-COLOR: rgb(51,127,229)">&nbsp;s2 -=3D 11;</SPAN><=
SPAN class=3DApple-converted-space>&nbsp;</SPAN><BR><BR><BR>&nbsp=
;if (((pkt-&gt;m_packetType =3D=3D RTMP_PACKET_TYPE_AUDIO<SPAN cl=
ass=3DApple-converted-space>&nbsp;</SPAN><BR>&nbsp; &nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; || pkt-&gt;m_packetType =3D=3D=
 RTMP_PACKET_TYPE_VIDEO) &amp;&amp;<SPAN class=3DApple-converted-=
space>&nbsp;</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
!pkt-&gt;m_nTimeStamp) || pkt-&gt;m_packetType =3D=3D RTMP_PACKET=
_TYPE_INFO)<SPAN class=3DApple-converted-space>&nbsp;</SPAN><BR>&=
nbsp; &nbsp;{<SPAN class=3DApple-converted-space>&nbsp;</SPAN><BR=
>&nbsp; &nbsp; &nbsp;pkt-&gt;m_headerType =3D RTMP_PACKET_SIZE_LA=
RGE;<SPAN class=3DApple-converted-space>&nbsp;</SPAN><BR>&nbsp; &=
nbsp; &nbsp;if (pkt-&gt;m_packetType =3D=3D RTMP_PACKET_TYPE_INFO=
)<SPAN class=3DApple-converted-space>&nbsp;</SPAN><BR>&nbsp; &nbs=
p; &nbsp;&nbsp;pkt-&gt;m_nBodySize +=3D 16;<SPAN class=3DApple-co=
nverted-space>&nbsp;</SPAN><BR>&nbsp; &nbsp;}<SPAN class=3DApple-=
converted-space>&nbsp;</SPAN><BR>&nbsp;else<SPAN class=3DApple-co=
nverted-space>&nbsp;</SPAN><BR>&nbsp; &nbsp;{<SPAN class=3DApple-=
converted-space>&nbsp;</SPAN><BR>&nbsp; &nbsp; &nbsp;pkt-&gt;m_he=
aderType =3D RTMP_PACKET_SIZE_MEDIUM;<SPAN class=3DApple-converte=
d-space>&nbsp;</SPAN><BR>&nbsp; &nbsp;}<SPAN class=3DApple-conver=
ted-space>&nbsp;</SPAN><BR><BR><BR>BYTE outbuf2[640];<SPAN class=3D=
Apple-converted-space>&nbsp;</SPAN><BR>int nLen2 =3D 640;<SPAN cl=
ass=3DApple-converted-space>&nbsp;</SPAN><BR><BR><BR><SPAN style=3D=
"BACKGROUND-COLOR: rgb(229,51,51)"><SPAN style=3D"BACKGROUND-COLO=
R: rgb(51,127,229)">AVManager::GetInstance()-&gt;Decode((BYTE*)(p=
kt-&gt;m_body+1), pkt-&gt;m_nBodySize-1, outbuf2, nLen2);</SPAN><=
BR><SPAN style=3D"BACKGROUND-COLOR: rgb(51,127,229)">//=CA=B5=BC=CA=
=D2=F4=C6=B5=C4=DA=C8=DD=CE=AA</SPAN><SPAN style=3D"WHITE-SPACE:=20=
normal; BACKGROUND-COLOR: rgb(51,127,229)">pkt-&gt;m_body+1=A3=AC=
=B4=F3=D0=A1=CA=C7</SPAN><SPAN style=3D"WHITE-SPACE: normal; BACK=
GROUND-COLOR: rgb(51,127,229)">pkt-&gt;m_nBodySize-1=A1=A3</SPAN>=
<SPAN style=3D"BACKGROUND-COLOR: rgb(51,127,229)">=D5=E2=C0=EF=B5=
=C4=C9=F9=D2=F4=CA=C7speex=B1=E0=C2=EB=A1=A3</SPAN><BR><SPAN styl=
e=3D"BACKGROUND-COLOR: rgb(51,127,229)">=CE=AA=CA=B2=C3=B4=CC=F8=B9=
=FD=B5=DA=D2=BB=D7=D6=BD=DA=A3=AC</SPAN><SPAN style=3D"WHITE-SPAC=
E: normal; BACKGROUND-COLOR: rgb(0,153,0)">=BF=C9=D2=D4=B2=CE=BF=BC=
=A3=BA</SPAN><SPAN style=3D"WHITE-SPACE: normal; BACKGROUND-COLOR=
: rgb(0,153,0)">http://bbs.rosoo.net/thread-16488-1-1.html</SPAN>=
<BR style=3D"WHITE-SPACE: normal"></SPAN><BR>evt_OnReceivePacket(=
(char*)outbuf2, nLen2);//=BB=D8=B5=F7=B3=F6=C0=B4<SPAN class=3DAp=
ple-converted-space>&nbsp;</SPAN><BR><BR><BR style=3D"WHITE-SPACE=
: normal"><BR style=3D"WHITE-SPACE: normal"><SPAN style=3D"WHITE-=
SPACE: normal">RTMPPacket_Free(pkt);</SPAN><SPAN class=3DApple-co=
nverted-space>&nbsp;</SPAN><BR style=3D"WHITE-SPACE: normal"><SPA=
N style=3D"WHITE-SPACE: normal">pkt-&gt;m_nBytesRead =3D 0;</SPAN=
><SPAN class=3DApple-converted-space>&nbsp;</SPAN><BR><BR>2&nbsp;=
<SPAN class=3DApple-converted-space>&nbsp;</SPAN><BR>=CA=D3=C6=B5=
=B4=A6=C0=ED<SPAN class=3DApple-converted-space>&nbsp;</SPAN><BR>=
=BF=C9=D2=D4=B2=CE=BF=BCrtmpsrv.c<SPAN class=3DApple-converted-sp=
ace>&nbsp;</SPAN><BR>=B0=D1<SPAN class=3DApple-converted-space>&n=
bsp;</SPAN><SPAN style=3D"WHITE-SPACE: normal">nRead =3D RTMP_Rea=
d(rtmp, buffer, bufferSize);=B8=C4=B3=C9=A3=BA<BR><BR>RTMPPacket=20=
pc =3D { 0 }, ps =3D { 0 };<BR>bool bFirst =3D true;<BR>while (RT=
MP_ReadPacket(rtmp, &amp;pc))<BR>{<BR>&nbsp;&nbsp;&nbsp; if (RTMP=
Packet_IsReady(&amp;pc))<BR>&nbsp;&nbsp;&nbsp; {<BR>&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (pc.m_packetType =3D=3D RTMP_PAC=
KET_TYPE_VIDEO &amp;&amp; RTMP_ClientPacket(rtmp, &amp;pc))<BR>&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<BR>&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bool bIsKeyFrame=20=
=3D false;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp; if (result =3D=3D 0x17)//I frame<BR>&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<BR>&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp; bIsKeyFrame =3D true;<BR>&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else if (re=
sult =3D=3D 0x27)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp; {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bIsKeyFrame=
 =3D false;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp; static unsigned char const start_code[4]=20=
=3D {0x00, 0x00, 0x00, 0x01};<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fwrite(start_code, 1, 4, pf );=
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp; //int ret =3D fwrite(pc.m_body + 9, 1, pc.m_nBodySize-9, pf=
);<BR>=0A<DIV>&nbsp;</DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp; if( bFirst)<BR>&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<BR>&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp; //AVCsequence header<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //io=
Buffer.put(foredata);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //=BB=F1=C8=A1=
sps<BR>=0A<DIV>&nbsp;</DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int spsnum =3D=
 data[10]&amp;0x1f;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int number_sps =3D=
 11;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int count_sps =3D 1;<BR>=0A<DIV=
>&nbsp;</DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (count_sps&lt;=3Dsps=
num)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp; int spslen =3D(data[number_sps]&amp;0x000=
000FF)&lt;&lt;8 |(data[number_sps+1]&amp;0x000000FF);<BR>&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; number_sps +=3D 2;<BR>=0A=
<DIV>&nbsp;</DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
; fwrite(data+number_sps, 1, spslen, pf );<BR>&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fwrite(start_code, 1, 4, pf );<BR>=
=0A<DIV>&nbsp;</DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp; //ioBuffer.put(data,number_sps, spslen);<BR>&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //ioBuffer.put(foredata);<BR>=0A=
<DIV>&nbsp;</DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
; number_sps +=3D spslen;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp; count_sps ++;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<BR>=0A=
<DIV>&nbsp;</DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //=BB=F1=C8=A1pps<BR>&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp; int ppsnum =3D data[number_sps]&amp;0x1f=
;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int number_pps =3D number_sps+1;<B=
R>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp; int count_pps =3D 1;<BR>=0A<DIV>&nbsp=
;</DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (count_pps&lt;=3Dppsnum)<B=
R>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp; {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp; int ppslen =3D(data[number_pps]&amp;0x000000FF)=
&lt;&lt;8|data[number_pps+1]&amp;0x000000FF;<BR>=0A<DIV>&nbsp;</D=
IV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; number_pps +=
=3D 2;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //ioB=
uffer.put(data,number_pps,ppslen);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp; //ioBuffer.put(foredata);<BR>=0A<DIV>&nbsp=
;</DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fwrite(d=
ata+number_pps, 1, ppslen, pf );<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp; fwrite(start_code, 1, 4, pf );<BR>=0A<DIV>&n=
bsp;</DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; numbe=
r_pps +=3D ppslen;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp; count_pps ++;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp; bFirst =3Dfalse;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<BR>&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<BR>&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp; //AVCNALU<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int l=
en =3D0;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int num =3D5;<BR>=0A<DIV>&n=
bsp;</DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //ioBuffer.put(foredata);<BR>=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp; while(num&lt;pc.m_nBodySize)<BR>&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp; {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp; len =3D(data[num]&amp;0x000000FF)&lt;&lt;24|(data[num+1]=
&amp;0x000000FF)&lt;&lt;16|(data[num+2]&amp;0x000000FF)&lt;&lt;8|=
data[num+3]&amp;0x000000FF;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp; num =3D num+4;<BR>=0A<DIV>&nbsp;</DIV>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //ioBuffer.put(data,num,le=
n);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //ioBuff=
er.put(foredata);<BR>=0A<DIV>&nbsp;</DIV>&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp; fwrite(data+num, 1, len, pf );<BR>&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fwrite(start_code, 1=
, 4, pf );<BR>=0A<DIV>&nbsp;</DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp; num =3D num + len;<BR>&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
; }<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp; }<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<BR>&nb=
sp;&nbsp;&nbsp; }<BR>}<BR></SPAN><BR><BR>=BE=DF=CC=E5=CA=D3=C6=B5=
=B7=D6=CE=F6=B5=C4=BC=FB:&nbsp;http://blog.csdn.net/cssmhyl/artic=
le/details/8128478<SPAN class=3DApple-converted-space>&nbsp;</SPA=
N></DIV>&nbsp;</BODY>=0A</HTML>=0A

------=_Next_Part_0007462105.467--

------=_Next_Part_0022386315.041--

